{"version":3,"sources":["main.js"],"names":["$siteList","$","$lastLi","find","x","localStorage","getItem","$logo","xObject","JSON","parse","randomRgbColor","r","Math","floor","random","g","b","simplifyUrl","url","replace","hashMap","logo","background","render","remove","forEach","node","index","$li","insertBefore","on","window","open","e","stopPropagation","splice","prompt","indexOf","push","toUpperCase","onbeforeunload","string","stringify","setItem"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,YAAYC,EAAE,WAAF,CAAlB;AACA,IAAMC,UAAUF,UAAUG,IAAV,CAAe,SAAf,CAAhB;AACA,IAAMC,IAAIC,aAAaC,OAAb,CAAqB,GAArB,CAAV;AACA,IAAMC,QAAQP,UAAUG,IAAV,CAAe,OAAf,CAAd;AACA,IAAMK,UAAUC,KAAKC,KAAL,CAAWN,CAAX,CAAhB;AACA,SAASO,cAAT,GAA0B;AACxB;AACA,MAAIC,IAAIC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,GAA3B,CAAR;AACA,MAAIC,IAAIH,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,GAA3B,CAAR;AACA,MAAIE,IAAIJ,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,GAA3B,CAAR;AACA,kBAAcH,CAAd,SAAmBI,CAAnB,SAAwBC,CAAxB;AACD;;AAED,IAAMC,cAAc,SAAdA,WAAc,CAACC,GAAD,EAAS;AAC3B,SAAOA,IACJC,OADI,CACI,SADJ,EACe,EADf,EAEJA,OAFI,CAEI,UAFJ,EAEgB,EAFhB,EAGJA,OAHI,CAGI,MAHJ,EAGY,EAHZ,EAIJA,OAJI,CAII,MAJJ,EAIY,EAJZ,EAKJA,OALI,CAKI,KALJ,EAKW,EALX,EAMJA,OANI,CAMI,MANJ,EAMY,EANZ,EAOJA,OAPI,CAOI,MAPJ,EAOY,EAPZ,CAAP;AAQD,CATD;AAUA,IAAIC,UAAUb,WAAW,CACvB;AACEc,QAAM,GADR;AAEEH,OAAK,sBAFP;AAGEI,cAAY;AAHd,CADuB,EAMvB;AACED,QAAM,GADR;AAEEH,OAAK,0BAFP;AAGEI,cAAY;AAHd,CANuB,CAAzB;AAYA,IAAIC,SAAS,SAATA,MAAS,GAAM;AACjBxB,YAAUG,IAAV,CAAe,eAAf,EAAgCsB,MAAhC;AACAJ,UAAQK,OAAR,CAAgB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC/B,QAAMC,MAAM5B,6FAGiC0B,KAAKJ,UAHtC,wBAIJI,KAAKL,IAJD,0DAMcJ,YAAYS,KAAKR,GAAjB,CANd,qNAcVW,YAdU,CAcG5B,OAdH,CAAZ;AAeA2B,QAAIE,EAAJ,CAAO,OAAP,EAAgB,YAAM;AACpBC,aAAOC,IAAP,CAAYN,KAAKR,GAAjB;AACD,KAFD;AAGAU,QAAIE,EAAJ,CAAO,OAAP,EAAgB,QAAhB,EAA0B,UAACG,CAAD,EAAO;AAC/BA,QAAEC,eAAF;AACAd,cAAQe,MAAR,CAAeR,KAAf,EAAsB,CAAtB;AACAJ;AACD,KAJD;AAKD,GAxBD;AAyBD,CA3BD;AA4BAA;AACAvB,EAAE,MAAF,EAAU8B,EAAV,CAAa,OAAb,EAAsB,YAAM;AAC1B,MAAIZ,MAAMa,OAAOK,MAAP,CAAc,aAAd,CAAV;AACA,MAAIlB,IAAImB,OAAJ,CAAY,MAAZ,MAAwB,CAA5B,EAA+B;AAC7BnB,UAAM,aAAaA,GAAnB;AACD;AACDE,UAAQkB,IAAR,CAAa;AACXjB,UAAMJ,YAAYC,GAAZ,EAAiB,CAAjB,EAAoBqB,WAApB,EADK;AAEXrB,SAAKA,GAFM;AAGXI,gBAAYZ;AAHD,GAAb;;AAMAa;AACD,CAZD;AAaAQ,OAAOS,cAAP,GAAwB,YAAM;AAC5B,MAAMC,SAASjC,KAAKkC,SAAL,CAAetB,OAAf,CAAf;AACAW,SAAO3B,YAAP,CAAoBuC,OAApB,CAA4B,GAA5B,EAAiCF,MAAjC;AACD,CAHD","file":"main.6be15af1.map","sourceRoot":"..\\src","sourcesContent":["const $siteList = $(\".siteList\");\r\nconst $lastLi = $siteList.find(\"li.last\");\r\nconst x = localStorage.getItem(\"x\");\r\nconst $logo = $siteList.find(\".logo\");\r\nconst xObject = JSON.parse(x);\r\nfunction randomRgbColor() {\r\n  //随机生成RGB颜色\r\n  let r = Math.floor(Math.random() * 192);\r\n  let g = Math.floor(Math.random() * 192);\r\n  let b = Math.floor(Math.random() * 192);\r\n  return `rgb(${r},${g},${b})`;\r\n}\r\n\r\nconst simplifyUrl = (url) => {\r\n  return url\r\n    .replace(\"http://\", \"\")\r\n    .replace(\"https://\", \"\")\r\n    .replace(\"www.\", \"\")\r\n    .replace(\".com\", \"\")\r\n    .replace(\".cn\", \"\")\r\n    .replace(\".net\", \"\")\r\n    .replace(/\\/.*/, \"\");\r\n};\r\nlet hashMap = xObject || [\r\n  {\r\n    logo: \"A\",\r\n    url: \"https://www.acfun.cn\",\r\n    background: \"rgb(177,12,75)\",\r\n  },\r\n  {\r\n    logo: \"B\",\r\n    url: \"https://www.bilibili.com\",\r\n    background: \"rgb(74,57,140)\",\r\n  },\r\n];\r\nlet render = () => {\r\n  $siteList.find(\"li:not(.last)\").remove();\r\n  hashMap.forEach((node, index) => {\r\n    const $li = $(\r\n      `<li>\r\n        <div class=\"site\">\r\n          <div class=\"logo\" style=\"background: ${node.background};\">\r\n          ${node.logo}\r\n          </div>\r\n          <div class=\"link\">${simplifyUrl(node.url)}</div>\r\n          <div class=\"close\">\r\n                <svg class=\"icon\">\r\n                    <use xlink:href=\"#icon-close\"></use>\r\n                </svg>\r\n          </div>\r\n        </div>\r\n    </li>`\r\n    ).insertBefore($lastLi);\r\n    $li.on(\"click\", () => {\r\n      window.open(node.url);\r\n    });\r\n    $li.on(\"click\", \".close\", (e) => {\r\n      e.stopPropagation();\r\n      hashMap.splice(index, 1);\r\n      render();\r\n    });\r\n  });\r\n};\r\nrender();\r\n$(\".add\").on(\"click\", () => {\r\n  let url = window.prompt(\"请问你要添加的网址是：\");\r\n  if (url.indexOf(\"http\") !== 0) {\r\n    url = \"https://\" + url;\r\n  }\r\n  hashMap.push({\r\n    logo: simplifyUrl(url)[0].toUpperCase(),\r\n    url: url,\r\n    background: randomRgbColor(),\r\n  });\r\n\r\n  render();\r\n});\r\nwindow.onbeforeunload = () => {\r\n  const string = JSON.stringify(hashMap);\r\n  window.localStorage.setItem(\"x\", string);\r\n};\r\n"]}